#Mainsail settings
[include mainsail.cfg]

#Timelapse
[include timelapse.cfg]

#NeoPixel macros
#[include neopixel.cfg]

#Led effects macros
[include led_effects.cfg]

#Steppers config
[include steppers.cfg]

#Macros
[include macros.cfg]

[include KAMP/*cfg]

[exclude_object]

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_160048001750534E4E313420-if00

[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[gcode_shell_command backup_to_github]
command: sh /home/pi/git_backup.sh
timeout: 30.
verbose: True

[gcode_macro GITHUB_BACKUP]
gcode:
    RUN_SHELL_COMMAND CMD=backup_to_github

#SB2040
[mcu EBBCan]
canbus_uuid: ec41cf71529f

[mcu rpi]
serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000             #Max 4000
max_accel_to_decel: 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   TEMPERATURE SENSORS
#####################################################################
# [temperature_sensor raspberry_pi]
# sensor_type: temperature_host
# min_temp: 10
# max_temp: 100

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor EBB]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
min_temp: 0
max_temp: 350

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 0
max_temp: 100
gcode_id: C

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
  175, 175, 20 # an example

[filament_motion_sensor filament_sensor]
detection_length: 10.00 # This can be adjusted to your desired level of sensitivity. 10 is a recomended value to prevent flow dropoff false triggers.
extruder: extruder
switch_pin: ^PG12
pause_on_runout: True # This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
    PAUSE
    M117 Out of Filament
insert_gcode:
    M117 Resuming
    RESUME

#####################################################################
#   FANS
#####################################################################
[multi_pin fan_multi_pin]
pins: PD12,PD13
#   A comma separated list of pins associated with this alias. This
#   parameter must be provided.

# Parts fan
[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[temperature_fan raspberry_pi]
pin: multi_pin:fan_multi_pin #PC8 #This is where you change the mcu name and/or pin
control: watermark #This is the hysteresis we will use instead of pid.
max_delta: 3.0 #How much to go over/under target temp before toggling the fan
shutdown_speed: 1 #1 #Turn the fan on at max if an error causes shutdown
sensor_type: temperature_host #this is where we get the temperature
min_temp: 0 #min/max are just for sanity checks to detect a malfunctioning sensor
max_temp: 100
max_power: 1 #1
target_temp: 55.0 #The temperature at which to toggle the fan

###########################


[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
gear_ratio: 50:10
rotation_distance: 20.540 #23.135 
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 1400
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: -100
max_temp: 350
min_extrude_temp: 170
max_extrude_cross_section: 5

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 0

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA3
sensor_type: Generic 3950 #NTC 100K beta 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120

[idle_timeout]
timeout: 1800

[firmware_retraction]
retract_length: 0.5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of additional filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#####################################################################
#   Probe
#####################################################################

##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling
[probe]
#[Voron Tap]
pin: EBBCan: PB5
x_offset: 0
y_offset: 0
#z_offset: 0
#speed: 3.0
#lift_speed: 7
speed: 15
lift_speed: 20
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[safe_z_home]
home_xy_position: 175,175
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 100
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 10
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 15.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 15 mm/s.
move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

##	Gantry Corners for 350mm Build
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25

speed: 500
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.01 #0.0075
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic
relative_reference_index: 12 # Update when changing probe_count, to ((x points * y points) - 1) / 2. (the center point)

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.510
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.610
#*# pid_ki = 1.661
#*# pid_kd = 248.226
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 35.513
#*# pid_ki = 4.735
#*# pid_kd = 66.587
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 53.8
#*# shaper_type_y = zv
#*# shaper_freq_y = 41.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.028750, 0.013750, -0.023750
#*# 	0.025000, 0.000000, -0.056250
#*# 	0.023750, 0.011250, -0.048750
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 121.62
#*# max_x = 225.38
#*# min_y = 125.96
#*# max_y = 222.2
